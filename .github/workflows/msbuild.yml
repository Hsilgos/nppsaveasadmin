name: MSBuild

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: UnitTests/UnitTests.vcxproj

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  # BUILD_CONFIGURATION: ${{ matrix.build_configuration }}
  
  # PLATFORM: ${{ matrix.platform }}

jobs:
  build:
    runs-on: windows-2016
    
    strategy:
      matrix:
        platform: [Win32, x64]
        build_configuration: [Release, Debug]

    steps:
    - uses: actions/checkout@v2

    - name: Install CMake
      uses: jwlawson/actions-setup-cmake@v1.7
      with:
        cmake-version: '3.19.3'
    
    - name: Checkout GTest
      uses: actions/checkout@v2
      with:
        repository: 'google/googletest'
        ref: 'release-1.8.1'
        path: 'googletest'
    
    - name: Build GTest
      shell: cmd
      run: |
        cd googletest
        md build
        cd build
        IF "${{ matrix.platform }}"=="Win32" (
          SET CMAKE_COMPILER="Visual Studio 15 2017"
        ) ELSE (
          SET CMAKE_COMPILER="Visual Studio 15 2017 Win64"
        )
        echo "PLATFORM_FOLDER=%PLATFORM_FOLDER%"
        echo "CMAKE_COMPILER=%CMAKE_COMPILER%"
        echo "GITHUB_WORKSPACE=%GITHUB_WORKSPACE%"
        cmake -Dgtest_force_shared_crt=OFF -DCMAKE_INSTALL_PREFIX=%GITHUB_WORKSPACE%\googletest_release -G %CMAKE_COMPILER% ..
        IF %ERRORLEVEL% NEQ 0 exit /b %ERRORLEVEL%
        
        cmake --build . --config ${{ matrix.build_configuration }}
        IF %ERRORLEVEL% NEQ 0 exit /b %ERRORLEVEL%
        
        dir /b

        cmake --build . --target install --config ${{ matrix.build_configuration }}
        IF %ERRORLEVEL% NEQ 0 exit /b %ERRORLEVEL%

        cd ../..

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1
      #with:
      #  vs-version: '[15.1, 15.9.16]'

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{ matrix.build_configuration }} /p:platform=${{ matrix.platform }} /p:GTestPath=%GITHUB_WORKSPACE%\googletest_release /p:AssemblySearchPaths=googletest_release\include ${{env.SOLUTION_FILE_PATH}}

    - name: Unit test x64
      # if: matrix.platform == 'x64'
      run: %GITHUB_WORKSPACE%\UnitTests\x64\${{ matrix.build_configuration }}\UnitTests.exe

    - name: Unit test Win32
      # if: matrix.platform == 'Win32'
      run: %GITHUB_WORKSPACE%\UnitTests\${{ matrix.build_configuration }}\UnitTests.exe
